'use client'

import { useState } from 'react'
import Image from "next/image"
import Link from "next/link"
import {
  File,
  Home,
  LineChart,
  ListFilter,
  MoreHorizontal,
  Package,
  Package2,
  PanelLeft,
  PlusCircle,
  Search,
  Settings,
  ShoppingCart,
  Users2,
  ChevronDown,
  ChevronUp,
  TrendingUp,
  DollarSign,
  ShoppingBag,
  Star,
} from "lucide-react"

import { Badge } from "@/components/ui/badge"
import {
  Breadcrumb,
  BreadcrumbItem,
  BreadcrumbLink,
  BreadcrumbList,
  BreadcrumbPage,
  BreadcrumbSeparator,
} from "@/components/ui/breadcrumb"
import { Button } from "@/components/ui/button"
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card"
import {
  DropdownMenu,
  DropdownMenuCheckboxItem,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu"
import { Input } from "@/components/ui/input"
import { Sheet, SheetContent, SheetTrigger } from "@/components/ui/sheet"
import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from "@/components/ui/table"
import {
  Tabs,
  TabsContent,
  TabsList,
  TabsTrigger,
} from "@/components/ui/tabs"
import {
  Tooltip,
  TooltipContent,
  TooltipTrigger,
} from "@/components/ui/tooltip"
import { Pagination, PaginationContent, PaginationEllipsis, PaginationItem, PaginationLink, PaginationNext, PaginationPrevious } from "@/components/ui/pagination"

const initialProducts = [
  {
    id: 1,
    name: "Laser Lemonade Machine",
    status: "Draft",
    price: 499.99,
    totalSales: 25,
    createdAt: "2023-07-12T10:42:00Z",
    image: "/placeholder.svg?height=64&width=64",
  },
  {
    id: 2,
    name: "Hypernova Headphones",
    status: "Active",
    price: 129.99,
    totalSales: 100,
    createdAt: "2023-10-18T15:21:00Z",
    image: "/placeholder.svg?height=64&width=64",
  },
  {
    id: 3,
    name: "AeroGlow Desk Lamp",
    status: "Active",
    price: 39.99,
    totalSales: 50,
    createdAt: "2023-11-29T08:15:00Z",
    image: "/placeholder.svg?height=64&width=64",
  },
  {
    id: 4,
    name: "TechTonic Energy Drink",
    status: "Draft",
    price: 2.99,
    totalSales: 0,
    createdAt: "2023-12-25T23:59:00Z",
    image: "/placeholder.svg?height=64&width=64",
  },
  {
    id: 5,
    name: "Gamer Gear Pro Controller",
    status: "Active",
    price: 59.99,
    totalSales: 75,
    createdAt: "2024-01-01T00:00:00Z",
    image: "/placeholder.svg?height=64&width=64",
  },
  {
    id: 6,
    name: "Luminous VR Headset",
    status: "Active",
    price: 199.99,
    totalSales: 30,
    createdAt: "2024-02-14T14:14:00Z",
    image: "/placeholder.svg?height=64&width=64",
  },
]

export default function VividDashboard() {
  const [products, setProducts] = useState(initialProducts)
  const [sortColumn, setSortColumn] = useState('')
  const [sortDirection, setSortDirection] = useState('asc')
  const [currentPage, setCurrentPage] = useState(1)
  const [searchTerm, setSearchTerm] = useState('')
  const [selectedStatus, setSelectedStatus] = useState('all')

  const itemsPerPage = 5
  const filteredProducts = products
    .filter(product => 
      product.name.toLowerCase().includes(searchTerm.toLowerCase()) &&
      (selectedStatus === 'all' || product.status.toLowerCase() === selectedStatus)
    )
  const totalPages = Math.ceil(filteredProducts.length / itemsPerPage)

  const sortedProducts = [...filteredProducts].sort((a, b) => {
    if (sortColumn) {
      if (a[sortColumn] < b[sortColumn]) return sortDirection === 'asc' ? -1 : 1
      if (a[sortColumn] > b[sortColumn]) return sortDirection === 'asc' ? 1 : -1
    }
    return 0
  })

  const paginatedProducts = sortedProducts.slice(
    (currentPage - 1) * itemsPerPage,
    currentPage * itemsPerPage
  )

  const handleSort = (column) => {
    if (column === sortColumn) {
      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc')
    } else {
      setSortColumn(column)
      setSortDirection('asc')
    }
  }

  const handleSearch = (event) => {
    setSearchTerm(event.target.value)
    setCurrentPage(1)
  }

  const handleStatusFilter = (status) => {
    setSelectedStatus(status)
    setCurrentPage(1)
  }

  const handlePageChange = (page) => {
    setCurrentPage(page)
  }

  return (
    <div className="flex min-h-screen w-full flex-col bg-[#0B0C10] text-[#C5C6C7]">
      <aside className="fixed inset-y-0 left-0 z-10 hidden w-14 flex-col border-r border-[#1F2833] bg-[#0B0C10] sm:flex">
        <nav className="flex flex-col items-center gap-4 px-2 sm:py-5">
          <Link
            href="#"
            className="group flex h-9 w-9 shrink-0 items-center justify-center gap-2 rounded-full bg-[#66FCF1] text-lg font-semibold text-[#0B0C10] md:h-8 md:w-8 md:text-base"
          >
            <Package2 className="h-4 w-4 transition-all group-hover:scale-110" />
            <span className="sr-only">Acme Inc</span>
          </Link>
          <Tooltip>
            <TooltipTrigger asChild>
              <Link
                href="#"
                className="flex h-9 w-9 items-center justify-center rounded-lg text-[#66FCF1] transition-colors hover:bg-[#1F2833] md:h-8 md:w-8"
              >
                <Home className="h-5 w-5" />
                <span className="sr-only">Dashboard</span>
              </Link>
            </TooltipTrigger>
            <TooltipContent side="right">Dashboard</TooltipContent>
          </Tooltip>
          <Tooltip>
            <TooltipTrigger asChild>
              <Link
                href="#"
                className="flex h-9 w-9 items-center justify-center rounded-lg bg-[#1F2833] text-[#66FCF1] transition-colors hover:bg-[#45A29E] md:h-8 md:w-8"
              >
                <ShoppingCart className="h-5 w-5" />
                <span className="sr-only">Orders</span>
              </Link>
            </TooltipTrigger>
            <TooltipContent side="right">Orders</TooltipContent>
          </Tooltip>
          <Tooltip>
            <TooltipTrigger asChild>
              <Link
                href="#"
                className="flex h-9 w-9 items-center justify-center rounded-lg text-[#66FCF1] transition-colors hover:bg-[#1F2833] md:h-8 md:w-8"
              >
                <Package className="h-5 w-5" />
                <span className="sr-only">Products</span>
              </Link>
            </TooltipTrigger>
            <TooltipContent side="right">Products</TooltipContent>
          </Tooltip>
          <Tooltip>
            <TooltipTrigger asChild>
              <Link
                href="#"
                className="flex h-9 w-9 items-center justify-center rounded-lg text-[#66FCF1] transition-colors hover:bg-[#1F2833] md:h-8 md:w-8"
              >
                <Users2 className="h-5 w-5" />
                <span className="sr-only">Customers</span>
              </Link>
            </TooltipTrigger>
            <TooltipContent side="right">Customers</TooltipContent>
          </Tooltip>
          <Tooltip>
            <TooltipTrigger asChild>
              <Link
                href="#"
                className="flex h-9 w-9 items-center justify-center rounded-lg text-[#66FCF1] transition-colors hover:bg-[#1F2833] md:h-8 md:w-8"
              >
                <LineChart className="h-5 w-5" />
                <span className="sr-only">Analytics</span>
              </Link>
            </TooltipTrigger>
            <TooltipContent side="right">Analytics</TooltipContent>
          </Tooltip>
        </nav>
        <nav className="mt-auto flex flex-col items-center gap-4 px-2 sm:py-5">
          <Tooltip>
            <TooltipTrigger asChild>
              <Link
                href="#"
                className="flex h-9 w-9 items-center justify-center rounded-lg text-[#66FCF1] transition-colors hover:bg-[#1F2833] md:h-8 md:w-8"
              >
                <Settings className="h-5 w-5" />
                <span className="sr-only">Settings</span>
              </Link>
            </TooltipTrigger>
            <TooltipContent side="right">Settings</TooltipContent>
          </Tooltip>
        </nav>
      </aside>
      <div className="flex flex-col sm:gap-4 sm:py-4 sm:pl-14">
        <header className="sticky top-0 z-30 flex h-14 items-center gap-4 border-b border-[#1F2833] bg-[#0B0C10] px-4 sm:static sm:h-auto sm:border-0 sm:bg-transparent sm:px-6">
          <Sheet>
            <SheetTrigger asChild>
              <Button size="icon" variant="outline" className="sm:hidden">
                <PanelLeft className="h-5 w-5" />
                <span className="sr-only">Toggle Menu</span>
              </Button>
            </SheetTrigger>
            <SheetContent side="left" className="bg-[#0B0C10] text-[#C5C6C7] sm:max-w-xs">
              <nav className="grid gap-6 text-lg font-medium">
                <Link
                  href="#"
                  className="group flex h-10 w-10 shrink-0 items-center justify-center gap-2 rounded-full bg-[#66FCF1] text-lg font-semibold text-[#0B0C10] md:text-base"
                >
                  <Package2 className="h-5 w-5 transition-all group-hover:scale-110" />
                  <span className="sr-only">Acme Inc</span>
                </Link>
                <Link
                  href="#"
                  className="flex items-center gap-4 px-2.5 text-[#66FCF1] hover:bg-[#1F2833]"
                >
                  <Home className="h-5 w-5" />
                  Dashboard
                </Link>
                <Link
                  href="#"
                  className="flex items-center gap-4 px-2.5 text-[#66FCF1] hover:bg-[#1F2833]"
                >
                  <ShoppingCart className="h-5 w-5" />
                  Orders
                </Link>
                <Link
                  href="#"
                  className="flex items-center gap-4 px-2.5 text-[#66FCF1] bg-[#1F2833]"
                >
                  <Package className="h-5 w-5" />
                  Products
                </Link>
                <Link
                  href="#"
                  className="flex items-center gap-4 px-2.5 text-[#66FCF1] hover:bg-[#1F2833]"
                >
                  <Users2 className="h-5 w-5" />
                  Customers
                </Link>
                <Link
                  href="#"
                  className="flex items-center gap-4 px-2.5 text-[#66FCF1] hover:bg-[#1F2833]"
                >
                  <LineChart className="h-5 w-5" />
                  Analytics
                </Link>
              </nav>
            </SheetContent>
          </Sheet>
          <Breadcrumb className="hidden md:flex">
            <BreadcrumbList>
              <BreadcrumbItem>
                <BreadcrumbLink asChild>
                  <Link href="#" className="text-[#66FCF1]">Dashboard</Link>
                </BreadcrumbLink>
              </BreadcrumbItem>
              <BreadcrumbSeparator />
              <BreadcrumbItem>
                <BreadcrumbLink asChild>
                  <Link href="#" className="text-[#66FCF1]">Products</Link>
                </BreadcrumbLink>
              </BreadcrumbItem>
              <BreadcrumbSeparator />
              <BreadcrumbItem>
                <BreadcrumbPage>All Products</BreadcrumbPage>
              </BreadcrumbItem>
            </BreadcrumbList>
          </Breadcrumb>
          <div className="relative ml-auto flex-1 md:grow-0">
            <Search className="absolute left-2.5 top-2.5 h-4 w-4 text-[#66FCF1]" />
            <Input
              type="search"
              placeholder="Search products..."
              className="w-full rounded-lg bg-[#1F2833] pl-8 text-[#C5C6C7] md:w-[200px] lg:w-[336px] focus:ring-[#66FCF1] focus:border-[#66FCF1]"
              value={searchTerm}
              onChange={handleSearch}
            />
          </div>
          <DropdownMenu>
            <DropdownMenuTrigger asChild>
              <Button
                variant="outline"
                size="icon"
                className="overflow-hidden rounded-full border-[#66FCF1]"
              >
                <Image
                  src="/placeholder.svg?height=36&width=36"
                  width={36}
                  height={36}
                  alt="Avatar"
                  className="overflow-hidden rounded-full"
                />
              </Button>
            </DropdownMenuTrigger>
            <DropdownMenuContent align="end" className="bg-[#1F2833] text-[#C5C6C7]">
              <DropdownMenuLabel>My Account</DropdownMenuLabel>
              <DropdownMenuSeparator className="bg-[#45A29E]" />
              <DropdownMenuItem>Settings</DropdownMenuItem>
              <DropdownMenuItem>Support</DropdownMenuItem>
              <DropdownMenuSeparator className="bg-[#45A29E]" />
              <DropdownMenuItem>Logout</DropdownMenuItem>
            </DropdownMenuContent>
          </DropdownMenu>
        </header>
        <main className="grid flex-1 items-start gap-4 p-4 sm:px-6 sm:py-0 md:gap-8">
          <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-4">
            <Card className="bg-gradient-to-br from-[#1F2833] to-[#0B0C10] border-[#45A29E]">
              <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
                <CardTitle className="text-sm font-medium text-[#66FCF1]">
                  Total Revenue
                </CardTitle>
                <DollarSign className="h-4 w-4 text-[#66FCF1]" />
              </CardHeader>
              <CardContent>
                <div className="text-2xl font-bold text-[#66FCF1]">$45,231.89</div>
                <p className="text-xs text-[#45A29E]">+20.1% from last month</p>
              </CardContent>
            </Card>
            <Card className="bg-gradient-to-br from-[#1F2833] to-[#0B0C10] border-[#45A29E]">
              <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
                <CardTitle className="text-sm font-medium text-[#66FCF1]">
                  Active Products
                </CardTitle>
                <Package className="h-4 w-4 text-[#66FCF1]" />
              </CardHeader>
              <CardContent>
                <div className="text-2xl font-bold text-[#66FCF1]">+2350</div>
                <p className="text-xs text-[#45A29E]">+180.1% from last month</p>
              </CardContent>
            </Card>
            <Card className="bg-gradient-to-br from-[#1F2833] to-[#0B0C10] border-[#45A29E]">
              <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
                <CardTitle className="text-sm font-medium text-[#66FCF1]">
                  Sales
                </CardTitle>
                <ShoppingBag className="h-4 w-4 text-[#66FCF1]" />
              </CardHeader>
              <CardContent>
                <div className="text-2xl font-bold text-[#66FCF1]">+12,234</div>
                <p className="text-xs text-[#45A29E]">+19% from last month</p>
              </CardContent>
            </Card>
            <Card className="bg-gradient-to-br from-[#1F2833] to-[#0B0C10] border-[#45A29E]">
              <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
                <CardTitle className="text-sm font-medium text-[#66FCF1]">
                  Active Users
                </CardTitle>
                <Users2 className="h-4 w-4 text-[#66FCF1]" />
              </CardHeader>
              <CardContent>
                <div className="text-2xl font-bold text-[#66FCF1]">+573,893</div>
                <p className="text-xs text-[#45A29E]">+201 since last hour</p>
              </CardContent>
            </Card>
          </div>
          <Tabs defaultValue="all" onValueChange={(value) => handleStatusFilter(value)}>
            <div className="flex items-center">
              <TabsList className="bg-[#1F2833]">
                <TabsTrigger value="all" className="data-[state=active]:bg-[#45A29E] data-[state=active]:text-[#0B0C10]">All</TabsTrigger>
                <TabsTrigger value="active" className="data-[state=active]:bg-[#45A29E] data-[state=active]:text-[#0B0C10]">Active</TabsTrigger>
                <TabsTrigger value="draft" className="data-[state=active]:bg-[#45A29E] data-[state=active]:text-[#0B0C10]">Draft</TabsTrigger>
                <TabsTrigger value="archived" className="hidden sm:flex data-[state=active]:bg-[#45A29E] data-[state=active]:text-[#0B0C10]">
                  Archived
                </TabsTrigger>
              </TabsList>
              <div className="ml-auto flex items-center gap-2">
                <DropdownMenu>
                  <DropdownMenuTrigger asChild>
                    <Button variant="outline" size="sm" className="h-8 gap-1 border-[#66FCF1] text-[#66FCF1]">
                      <ListFilter className="h-3.5 w-3.5" />
                      <span className="sr-only sm:not-sr-only sm:whitespace-nowrap">
                        Filter
                      </span>
                    </Button>
                  </DropdownMenuTrigger>
                  <DropdownMenuContent align="end" className="bg-[#1F2833] text-[#C5C6C7]">
                    <DropdownMenuLabel>Filter by</DropdownMenuLabel>
                    <DropdownMenuSeparator className="bg-[#45A29E]" />
                    <DropdownMenuCheckboxItem checked={selectedStatus === 'active'} onCheckedChange={() => handleStatusFilter('active')}>
                      Active
                    </DropdownMenuCheckboxItem>
                    <DropdownMenuCheckboxItem checked={selectedStatus === 'draft'} onCheckedChange={() => handleStatusFilter('draft')}>
                      Draft
                    </DropdownMenuCheckboxItem>
                    <DropdownMenuCheckboxItem checked={selectedStatus === 'archived'} onCheckedChange={() => handleStatusFilter('archived')}>
                      Archived
                    </DropdownMenuCheckboxItem>
                  </DropdownMenuContent>
                </DropdownMenu>
                <Button size="sm" variant="outline" className="h-8 gap-1 border-[#66FCF1] text-[#66FCF1]">
                  <File className="h-3.5 w-3.5" />
                  <span className="sr-only sm:not-sr-only sm:whitespace-nowrap">
                    Export
                  </span>
                </Button>
                <Button size="sm" className="h-8 gap-1 bg-[#66FCF1] text-[#0B0C10] hover:bg-[#45A29E]">
                  <PlusCircle className="h-3.5 w-3.5" />
                  <span className="sr-only sm:not-sr-only sm:whitespace-nowrap">
                    Add Product
                  </span>
                </Button>
              </div>
            </div>
            <TabsContent value="all">
              <Card className="bg-[#1F2833] border-[#45A29E]">
                <CardHeader>
                  <CardTitle className="text-[#66FCF1]">Products</CardTitle>
                  <CardDescription className="text-[#C5C6C7]">
                    Manage your products and view their sales performance.
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <Table>
                    <TableHeader>
                      <TableRow className="border-b border-[#45A29E] hover:bg-[#0B0C10]/50">
                        <TableHead className="hidden w-[100px] sm:table-cell">
                          <span className="sr-only">Image</span>
                        </TableHead>
                        <TableHead className="text-[#66FCF1]">
                          <Button variant="ghost" onClick={() => handleSort('name')} className="text-[#66FCF1]">
                            Name
                            {sortColumn === 'name' && (
                              sortDirection === 'asc' ? <ChevronUp className="ml-2 h-4 w-4" /> : <ChevronDown className="ml-2 h-4 w-4" />
                            )}
                          </Button>
                        </TableHead>
                        <TableHead className="text-[#66FCF1]">Status</TableHead>
                        <TableHead className="hidden md:table-cell text-[#66FCF1]">
                          <Button variant="ghost" onClick={() => handleSort('price')} className="text-[#66FCF1]">
                            Price
                            {sortColumn === 'price' && (
                              sortDirection === 'asc' ? <ChevronUp className="ml-2 h-4 w-4" /> : <ChevronDown className="ml-2 h-4 w-4" />
                            )}
                          </Button>
                        </TableHead>
                        <TableHead className="hidden md:table-cell text-[#66FCF1]">
                          <Button variant="ghost" onClick={() => handleSort('totalSales')} className="text-[#66FCF1]">
                            Total Sales
                            {sortColumn === 'totalSales' && (
                              sortDirection === 'asc' ? <ChevronUp className="ml-2 h-4 w-4" /> : <ChevronDown className="ml-2 h-4 w-4" />
                            )}
                          </Button>
                        </TableHead>
                        <TableHead className="hidden md:table-cell text-[#66FCF1]">
                          <Button variant="ghost" onClick={() => handleSort('createdAt')} className="text-[#66FCF1]">
                            Created at
                            {sortColumn === 'createdAt' && (
                              sortDirection === 'asc' ? <ChevronUp className="ml-2 h-4 w-4" /> : <ChevronDown className="ml-2 h-4 w-4" />
                            )}
                          </Button>
                        </TableHead>
                        <TableHead className="text-[#66FCF1]">
                          <span className="sr-only">Actions</span>
                        </TableHead>
                      </TableRow>
                    </TableHeader>
                    <TableBody>
                      {paginatedProducts.map((product) => (
                        <TableRow key={product.id} className="border-b border-[#45A29E] hover:bg-[#0B0C10]/50">
                          <TableCell className="hidden sm:table-cell">
                            <Image
                              alt="Product image"
                              className="aspect-square rounded-md object-cover"
                              height="64"
                              src={product.image}
                              width="64"
                            />
                          </TableCell>
                          <TableCell className="font-medium text-[#C5C6C7]">
                            {product.name}
                          </TableCell>
                          <TableCell>
                            <Badge variant={product.status === 'Active' ? 'default' : 'secondary'} className="bg-[#66FCF1] text-[#0B0C10]">
                              {product.status}
                            </Badge>
                          </TableCell>
                          <TableCell className="hidden md:table-cell text-[#C5C6C7]">
                            ${product.price.toFixed(2)}
                          </TableCell>
                          <TableCell className="hidden md:table-cell text-[#C5C6C7]">
                            {product.totalSales}
                          </TableCell>
                          <TableCell className="hidden md:table-cell text-[#C5C6C7]">
                            {new Date(product.createdAt).toLocaleString()}
                          </TableCell>
                          <TableCell>
                            <DropdownMenu>
                              <DropdownMenuTrigger asChild>
                                <Button
                                  aria-haspopup="true"
                                  size="icon"
                                  variant="ghost"
                                  className="text-[#66FCF1]"
                                >
                                  <MoreHorizontal className="h-4 w-4" />
                                  <span className="sr-only">Toggle menu</span>
                                </Button>
                              </DropdownMenuTrigger>
                              <DropdownMenuContent align="end" className="bg-[#1F2833] text-[#C5C6C7]">
                                <DropdownMenuLabel>Actions</DropdownMenuLabel>
                                <DropdownMenuItem>Edit</DropdownMenuItem>
                                <DropdownMenuItem>Delete</DropdownMenuItem>
                              </DropdownMenuContent>
                            </DropdownMenu>
                          </TableCell>
                        </TableRow>
                      ))}
                    </TableBody>
                  </Table>
                </CardContent>
                <CardFooter className="flex items-center justify-between">
                  <div className="text-xs text-[#C5C6C7]">
                    Showing <strong>{(currentPage - 1) * itemsPerPage + 1}-{Math.min(currentPage * itemsPerPage, filteredProducts.length)}</strong> of <strong>{filteredProducts.length}</strong> products
                  </div>
                  <Pagination>
                    <PaginationContent>
                      <PaginationItem>
                        <PaginationPrevious onClick={() => handlePageChange(Math.max(1, currentPage - 1))} className="text-[#66FCF1] hover:bg-[#0B0C10]/50" />
                      </PaginationItem>
                      {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (
                        <PaginationItem key={page}>
                          <PaginationLink onClick={() => handlePageChange(page)} isActive={page === currentPage} className={page === currentPage ? "bg-[#66FCF1] text-[#0B0C10]" : "text-[#66FCF1] hover:bg-[#0B0C10]/50"}>
                            {page}
                          </PaginationLink>
                        </PaginationItem>
                      ))}
                      <PaginationItem>
                        <PaginationNext onClick={() => handlePageChange(Math.min(totalPages, currentPage + 1))} className="text-[#66FCF1] hover:bg-[#0B0C10]/50" />
                      </PaginationItem>
                    </PaginationContent>
                  </Pagination>
                </CardFooter>
              </Card>
            </TabsContent>
          </Tabs>
        </main>
      </div>
    </div>
  )
}